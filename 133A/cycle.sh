#!                                             /bin/bash
########################################################
function str2arr() { ###################################
    local str=${1} #####################################
    local -n hooray=${2} ###############################
    local n=${#str} ####################################
    for(( j=0; j<n; j++)); do ########################## 
        hooray[ ${j}]=${str:j:1} #######################
    done ###############################################
} ######################################################
f1=(); tg=(); of=(); # formula one, tag and outfut #####
str2arr "(acfg)(bcd)(aed)(fade)(bgfae)=" f1 ############
str2arr "------------------------------" tg ############
str2arr "==============================" of ############
cx=0 ### scanning index ################################
bx=0 ######## output position ##########################
start=0 ###### start of cycle f1 lmnt index ############
g=$(( ${#f1[@]} - 1)) ####### guardian position ########
function dmp() { #######################################
    echo ${f1[@]} | sed 's/ //g' #######################
    echo ${tg[@]} | sed 's/ //g' #######################
    echo ${of[@]} | sed 's/ //g' #######################
} ######################################################
function fstpas() { ####################################
    for(( j = 0; j < g; j++)); do ######################
        if [ ${f1[ j]} == '(' ]; then ##################
            tg[ $j]='v' ################################
            f1[ $g]=${f1[(( j + 1))]} ##################
        elif [ ${f1[ j]} == ')' ]; then ################
            tg[ $j]='v' ################################
            f1[ $j]=${f1[ g]} ##########################
        fi #############################################
    done ###############################################
} ######################################################
function fst_untag() { ### find first un-tagged lmnt ###
    while :; do ########################################
        (( start++)) ###################################
        if [ ${tg[ start]} == "-" ]; then ##############
            break ######################################
        fi #############################################
    done ###############################################
} ######################################################
function scan() { ######################################
    while :; do ########################################
        while [ ${f1[ cx]} != ${f1[ g]} ]; do ########## 
            (( cx++)) ##################################
        done ###########################################
        if (( cx == g )); then #########################
            break ######################################
        fi #############################################
        tg[ ${cx}]='v' #################################
        f1[ ${g}]=${f1[(( cx + 1))]} ###################
        (( cx += 2)) ###################################
    done ###############################################
} ######################################################
function cycle() { #####################################
    fst_untag ##########################################
    if [ ${start} -eq ${g} ]; then #####################
        return 0 #### ve ar dn! ######################## 
    fi #################################################
    tg[ ${start}]='v' ##################################
    of[ $(( bx++))]='(' ################################
    of[ $(( bx++))]=${f1[ start]} ######################
    f1[ ${g}]=${f1[(( start + 1))]} ####################
    cx=$(( start + 2)) #################################
    while :; do ######################################## 
        scan ###########################################
        if [ ${f1[ g]} == ${f1[ start]} ]; then ########
            break ######################################
        fi #############################################
        of[ $(( bx++))]=${f1[ g]}; #####################
        cx=$(( start + 1 )) ############################
    done ###############################################
    of[ $(( bx++))]=")" ################################
    return 1 # do you copy? ############################
} ######################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
dmp ####################################################
fstpas #################################################
dmp ####################################################
while :; do ############################################
    cycle ##############################################
    if [ ${?} -eq 0 ]; then ############################
        break ##########################################
    fi #################################################
done ###################################################
dmp ####################################################
########################################################
# log: - At some point you have to stop with that stupid
# malevolent, masculine gender idealization, because you
# are encouraging the aggression against the defenseless
########################################################
    ####                                        ####
