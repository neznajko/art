COLZ	EQU	8		number of columns
L	EQU	72		mx offset
	ORIG	1000
STK	ORIG	*+COLZ		stack
M	ORIG	*+1 
	CON	11		* ROW 1
	CON	12
	CON	13
	CON	14
	CON	15
	CON	16
	CON	17
	CON	18
	CON	21		* ROW 2
	CON	22
	CON	23
	CON	24
	CON	25
	CON	26
	CON	27
	CON	28
	CON	31		* ROW 3
	CON	32
	CON	33
	CON 	34
	CON	35
	CON	36
	CON	37
	CON 	38
	CON	41		* ROW 4
	CON	42
	CON	43
	CON	44
	CON	45
	CON	46
	CON	47
	CON	48
	CON	51		* ROW 5
	CON	52
	CON	53
	CON	54
	CON	55
	CON	56
	CON	57
	CON	58
	CON	61		* ROW 6
	CON	62
	CON	63
	CON 	64
	CON	65
	CON	66
	CON	67
	CON 	68
	CON	71		* ROW 7
	CON	72
	CON	73
	CON	74
	CON	75
	CON	76
	CON	77
	CON	78
	CON	81		* ROW 8
	CON	82
	CON	83
	CON	84
	CON	85
	CON	86
	CON	87
	CON	88
	CON	91		* ROW 9
	CON	92
	CON	93
	CON 	94
	CON	95
	CON	96
	CON	97
	CON 	98
* rI3 iz K the offset
* rI2 iz J column counter
* rI6 iz T stack pointer
* rI5 iz STK[T]
START	ENT3	72
	ENT2	COLZ
	ENT6	0
	JMP	CKSTK
* SCAN A ROW FOR MN ELEMENTS AND PUSH THEIR IDXS INTO STACK
* CK FIRST IF K IZ ZERO IF SO JOB'S DONE
SCAN   	J3Z   	FIN
1H	INC6	1		PUSH K
	ST3	STK,6
2H	DEC3	1		SCAN LEFT ELEMENT
	DEC2	1
	J2Z	CKSTK		ROW SCANNED CK THE STACK
	LDA	M,3		
	LD5	STK,6
	CMPA	M,5		CMP M[K] AND M[STK[T]]
	JG	2B		NOPE, NEGATIVE
	JE	1B
	ENT6	0		NEW MN RESET STKPTR 
	JMP	1B
* HERE WE POP UNTIL THE STACK IZ EMPTY
* CK IF M[STK[T]] IS THE COLUMN MX ELEMENT
* AT EXIT G MEANS NEGATIVE
* FIRST WE SCAN UP ZEN WE SCAN DOWN
* rI4 IS THE CURRENT OFFSET (J')
CKSTK	ENT4	0,5		J' <- STK[T]
1H	DEC4	COLZ
	J4NP	1F		UP'S DONE
	LDA	M,4
	CMPA	M,5		CMP M[J'] AND M[STK[T]]
	JG	3F		NEVER BEGINZE
	JMP	1B
1H	ENT4	-L,5
2H	INC4	COLZ
	J4P	YEP		DONW'S DONE
	LDA	M+L,4
	CMPA	M,5
	JG	3F
	JMP	2B
3H	DEC6	1		POP
	J6Z	SCAN		EMPTY STACK
	LD5	STK,6
	JMP	CKSTK
YEP	NOP
FIN	NOP	
	END	START
